@model MVCProject.Models.ProductViewModel

@{
    ViewBag.Title = "Chỉnh sửa";
    Layout = "~/Views/Shared/_Layout.cshtml";
    dynamic imgs= null;
    if(!string.IsNullOrEmpty(Model.ImageLink))
    { imgs = Json.Decode(Model.ImageLink);    }
    
    
}
<form action="/Product/Edit" method="post" enctype="multipart/form-data" id="odForm" name="odForm">
    <section class="content-header">
        <h2>Chỉnh sửa</h2>
        <h4>Sản phẩm: @Model.ItemCode</h4>
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.Adwords)
        @Html.HiddenFor(model=>model.DateCreate)
    </section>
    <section class="content">
        <div class='arrage-popup'>
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="ProductName">Tên sản phẩm:</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProductName)
                </div>
            </div>
            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="ItemCode">Mã sản phẩm:</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.ItemCode, new { @class = "form-control", @readonly = "true" })
                    @Html.ValidationMessageFor(model => model.ItemCode)
                </div>
            </div>
            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="Barcode">Barcode</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Barcode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Barcode)
                </div>
            </div>
            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="SKU">SKU</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.SKU, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SKU)
                </div>
            </div>
            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="Price">Giá</label>
                <div class="col-md-6">
                    <input class="form-control" id="PriceModel" name="PriceModel" type="text" onchange="SetPrice();" value="@ViewBag.Price" maxlength="12" />
                    @Html.TextBoxFor(model => model.Price, new { @class = "form-control", @type = "hidden" })
                    @Html.ValidationMessageFor(model => model.Price)
                </div>
            </div>
            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="ProductCost">Giá vốn</label>
                <div class="col-md-6">
                    <input class="form-control" id="ProductCostModel" name="ProductCostModel" type="text" onchange="SetProductCost();" value="@ViewBag.ProductCost" maxlength="12" />
                    @Html.TextBoxFor(model => model.ProductCost, new { @class = "form-control", @type = "hidden" })
                    @Html.ValidationMessageFor(model => model.ProductCost)
                </div>
            </div>
            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="UserName">Chiết khấu Nhà Cung Cấp</label>
                <div class="col-md-6">
                    <input class="form-control" id="discountModel" name="discountModel" type="text" onchange="CostDiscount(this.value);" value="@ViewBag.DiscountCost">
                </div>
            </div>
            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="CatID">Danh mục</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.CatID, (IEnumerable<SelectListItem>)ViewBag.CatalogList,
                        "Chọn danh mục", new { @class = "form-control", @onchange = "SetCode(this.value);" })
                    @Html.ValidationMessageFor(model => model.CatID)
                </div>
            </div>

            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="SupplierID">Nhà phân phối:</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.SupplierID, (IEnumerable<SelectListItem>)ViewBag.SupplierList,
                        "Chọn nhà phân phối", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SupplierID)
                </div>
            </div>
            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="Show">Hiển thị:</label>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Show)
                    @Html.ValidationMessageFor(model => model.Show)
                </div>
            </div>

            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="Color">Màu sắc:</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Color, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Color)
                </div>
            </div>

            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="Dimension">Kích thước:</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Dimension, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Dimension)
                </div>
            </div>

            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="Unit">ĐVT:</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.Unit, (IEnumerable<SelectListItem>)ViewBag.CatalogUnit,
                                          "Chọn đơn vị tính", new { @class = "form-control", @onchange = "SetUnitName();" })
                    @Html.TextBoxFor(model => model.UnitName, new { @class = "form-control", @type = "hidden" })
                    @Html.ValidationMessageFor(model => model.Unit)
                </div>
            </div>

            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="TaxID">Thuế suất</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.TaxID, (IEnumerable<SelectListItem>)ViewBag.TaxList,
                        "Chọn thuế suất", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TaxID)
                </div>
            </div>

            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="Warranty">Thời gian bảo hành:</label>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.Warranty, (IEnumerable<SelectListItem>)ViewBag.WarrantyList,
                 "Chọn thời gian bảo hành", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Warranty)
                </div>
            </div>

            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="IsDel">Đã xóa:</label>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.IsDel)
                    @Html.ValidationMessageFor(model => model.IsDel)
                </div>
            </div>

            <div class="arrange-div form-group col-md-12">
                <label class="text-label col-md-2" for="ImageLink">Hình ảnh</label>
                <div class="col-md-6">
                    <ul class="list-inline" id="showMoreImgs">
                        @if(imgs!= null)
                        {
                            foreach (var item in imgs)
                            {
                                <li><img src="@item" width="100"></li>
                            }
                        }
                    </ul>
                    @Html.HiddenFor(model => model.ImageLink, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ImageLink)
                    <input type="button" value="Chọn hình" class="btn btn-info" id="openimg" />
                    <input type="button" value="Xóa" class="btn btn-info" id="delImgs" />
                </div>
            </div>
            <div style="text-align:center" class="col-md-12">
                <input type="submit" value="Lưu Lại" class="btn btn-info" />
                <a href="~/Product/Index" class="btn btn-info">Về danh sách</a>
            </div>
            <div class="clearfix"></div>
        </div>

        <script>
    $(document).ready(function () {

        var moreimgs = [];
        var _moreimgs = '@Html.Raw(Model.ImageLink)';
        if (_moreimgs != '' )
            moreimgs = JSON.parse('@Html.Raw(Model.ImageLink)');
        //$("#ImageLink").val(JSON.stringify(moreimgs));
        function BrowseServer() {
            // You can use the "CKFinder" class to render CKFinder in a page:
            var finder = new CKFinder();
            //finder.basePath = '/img/';
            finder.skin = 'bootstrap';
            finder.selectActionFunction = SetImg;
            finder.popup();
        }
        function SetImg(fileUrl) {
            var html = '<li><img src="' + fileUrl + '" width="100px"></li>';
            $("#showMoreImgs").append(html);
            moreimgs.push(fileUrl);
            $("#ImageLink").val(JSON.stringify(moreimgs));
        };

        $('#openimg').click(function () {
            BrowseServer();
        });
        $("#delImgs").click(function () {
            if (moreimgs.length != 0) {
                moreimgs.splice(moreimgs.length - 1, 1);
                $('#showMoreImgs li:last-child').remove();
                $("#ImageLink").val(JSON.stringify(moreimgs));
            }
        });
    });

    var useCatCode = '@ViewData["UseCatCode"].ToString()';
    var arrCatCode = new Array();
    @if (((List<MVCProject.Models.Catalog>)ViewData["CatCode"]).Count > 0) {
                int count = 0;
                foreach (var item in (IEnumerable<MVCProject.Models.Catalog>)ViewData["CatCode"])
                {
                    @Html.Raw("arrCatCode[" + count + "]='" + item.ID + "," + item.Code + "';" + Environment.NewLine);
                    count++;
                }
            }
    function SetUnitName() {
        var f = document.odForm;
        f.UnitName.value = f.Unit.options[f.Unit.selectedIndex].text;
    }
    function SetPrice() {
        var f = document.odForm;
        f.Price.value = f.PriceModel.value;
        f.PriceModel.value = accounting.formatMoney(f.Price.value, { symbol: "đ", precision: 0, format: "%v %s" });
    }
    function SetProductCost() {
        var f = document.odForm;
        f.ProductCost.value = f.ProductCostModel.value;
        f.ProductCostModel.value = accounting.formatMoney(f.ProductCost.value, { symbol: "đ", precision: 0, format: "%v %s" });
    }
    function CostDiscount(val) {
        var f = document.odForm;
        var dg = parseFloat(f.Price.value);
        dg = dg - (val / 100) * dg;
        f.ProductCostModel.value = accounting.formatMoney(dg, "", 0);
        f.ProductCost.value = dg;
    }
    function SetUnitName() {
        var f = document.odForm;
        f.UnitName.value = f.Unit.options[f.Unit.selectedIndex].text;
    }
    function SetCode(catid) {
        if (useCatCode == '0')
            return;

        var icode = document.getElementById("ItemCode").value;
        var strs = icode.split('.');
        var code = "";
        for (var i = 0; i < arrCatCode.length; i++) {
            var parts = arrCatCode[i].split(',');
            if (parts[0] == (catid + '')) {
                code = parts[1];
                break;
            }
        }
        if (strs.length == 3 && code != '')
            document.getElementById("ItemCode").value = code + '.' + icode;
        else if (strs.length == 4 && code != '')
            document.getElementById("ItemCode").value = code + '.' + strs[1] + '.' + strs[2] + '.' + strs[3];
    }
        </script>
    </section>

</form>
